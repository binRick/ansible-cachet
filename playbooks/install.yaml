- name: Installing Cachet
  hosts: cachetServers
  roles: []
  vars:
  tasks:
  - name: Installing required packages
    with_items: [httpd,openssl,git,ansible,redis,mariadb,mariadb-server,mariadb-libs,mod_ssl,MySQL-python,curl,tcpdump.memcached]
    yum: name={{item}} state=present
  - name: Starting memcached Server
    service: name=memcached state=started enabled=True
  - name: Starting/Enabling Redis Server
    service: name=redis enabled=True state=started
  - name: Starting/Enabling MySQL Server
    service: name=mariadb enabled=True state=started
  - name: Adding Cachet System User
    user:
        name: "{{user}}"
        generate_ssh_key: yes
        home: "/home/{{user}}"
        createhome: yes
  - name: Cloning Cachet Repo
    git: 
        repo: https://github.com/cachethq/Cachet.git
        dest: "/home/{{user}}/public_html"
        clone: yes
  - name: Chowning Home Directory
    file:
        path: "/home/{{user}}"
        owner: "{{user}}"
        group: "{{user}}"
        mode: 0711
  - name: Chowning Docroot
    file:
        path: "/home/{{user}}/public_html"
        owner: "{{user}}"
        group: "{{user}}"
        recurse: yes
  - name: Copying SSL Key to Apache
    copy: src={{sslKeyFile}} dest=/etc/pki/tls/private/{{sslHostname}}.key
  - name: Copying SSL Cert to Apache
    copy: src={{sslCertFile}} dest=/etc/pki/tls/certs/{{sslHostname}}.cert
  - name: Copying CA Chain File to Apache
    copy: src={{sslCAFile}} dest=/etc/pki/tls/certs/{{sslHostname}}-ca.pem
  - name: Deploying Apache Virtual Host File
    register: vH
    template: 
        src: vhost.conf.j2 
        dest: "/etc/httpd/conf.d/{{sslHostname}}.conf"
  - name: Restarting Apache
    when: vH|changed
    service: name=httpd state=restarted enabled=True
  - name: Checking if APP_KEY is not set
    register: appKeyNotSet
    shell: "grep '^APP_KEY=$' /home/{{user}}/public_html/.env"
    ignore_errors: True
  - name: Deploying cachet .env Template
    when: appKeyNotSet|failed or appKeyNotSet.rc == 0
    template: src=env.j2 dest=/home/{{user}}/public_html/.env
#  - name: Running Composer Install
#    become: yes
#    become_user: "{{user}}"
#    command: composer install --no-dev -o
#    args:
#        chdir: "/home/{{user}}/public_html"
  - name: Create MySQL Database
    mysql_db:
      name: "{{dbName}}"
      state: present
  - name: Create MySQL User
    mysql_user:
      name: "{{dbUser}}"
      password: "{{dbPass}}"
      priv: "{{dbName}}.*:ALL"
      state: present
  - name: Setting Application Key
    when: appKeyNotSet.rc == 0
    shell: php artisan key:generate
    args:
      chdir: "/home/{{user}}/public_html"
  - name: Installing Cachet
    when: appKeyNotSet.rc == 0
    shell: "echo yes | php artisan app:install"
    args:
      chdir: "/home/{{user}}/public_html"
